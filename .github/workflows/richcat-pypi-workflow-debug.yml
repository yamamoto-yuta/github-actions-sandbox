name: Richcat PyPI Workflow Debug

on:
  push:
    branches:
      - main

jobs:
  check_version:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get_version_in_branch.outputs.version_in_branch }}
      version_matched: ${{ steps.compare_version.outputs.matched }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Extract richcat version from branch name
        id: get_version_in_branch
        run: echo "::set-output name=version_in_branch::$(echo ${GITHUB_REF#refs/tags/} | sed 's/v//')"

      - name: Get richcat version from code
        id: get_version_in_code
        run: echo "::set-output name=version_in_code::X.X.2"

      - name: Compare version
        id: compare_version
        run: echo "::set-output name=matched::$([[ ${{ steps.get_version_in_branch.outputs.version_in_branch }} == ${{ steps.get_version_in_code.outputs.version_in_code }} ]]; echo $?)"

  release_richcat:
    runs-on: ubuntu-latest
    needs: check_version
    if: ${{ needs.check_version.outputs.version_matched == 0 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel twine

      - name: Build
        run: |
          rm -rf ./richcat.egg-info/ dist/
          python setup.py bdist_wheel

      - name: Publish package to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish package to TestPyPI
        id: upload
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Create release
        if: steps.upload.conclusion == 'success'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check_version.outputs.version }}
          release_name: Release v${{ needs.check_version.outputs.version }}
          draft: false
          prerelease: false
